Class Solution:
{
    public:
    //Function to find a continuous sub-array which adds up to a given number.
    vector<int> subarraySum(vector<int>arr, int n, long long s)
    {
        // Your code here
         int flag=0;

        int start=0;

        int sum=0;

        if(s==0) return {-1};

        for(int i=0;i<n;i++)

        {

            sum+=arr[i];

            while(sum>s )

            {

                sum=sum-arr[start];

                start++;

                

            }

            if(sum==s)

            {

                cout<<start+1<<" "<<i+1;

                flag=1;

                break;
    
            }

        }

        if(flag==0) cout<<-1;

       

    }
            
};{
    public:
    //Function to find a continuous sub-array which adds up to a given number.
    vector<int> subarraySum(vector<int>arr, int n, long long s)
    {
        // Your code here
         int flag=0;

        int start=0;

        int sum=0;

        if(s==0) return {-1};

        for(int i=0;i<n;i++)

        {

            sum+=arr[i];

            while(sum>s )

            {

                sum=sum-arr[start];

                start++;

                

            }

            if(sum==s)

            {

                cout<<start+1<<" "<<i+1;

                flag=1;

                break;
    
            }

        }

        if(flag==0) cout<<-1;

       

    }
            
};
{
    public:
    //Function to find a continuous sub-array which adds up to a given number.
    vector<int> subarraySum(vector<int>arr, int n, long long s)
    {
        // Your code here
         int flag=0;

        int start=0;

        int sum=0;

        if(s==0) return {-1};

        for(int i=0;i<n;i++)

        {

            sum+=arr[i];

            while(sum>s )

            {

                sum=sum-arr[start];

                start++;

                

            }

            if(sum==s)

            {

                cout<<start+1<<" "<<i+1;

                flag=1;

                break;
    
            }

        }

        if(flag==0) cout<<-1;

       

    }
            
};
